CHECK_DB_EXIST=select schema_name from information_schema.schemata where schema_name = 'mamarecipe';
CREATE_DB=create database if not exists mamarecipe;
CREATE_USER=create table if not exists USERS ( USER_ID int not null auto_increment, USER_NAME TEXT, USER_PASS TEXT, IP_ADDRESS TEXT, primary key (USER_ID));
CREATE_CATEGORIES=create table if not exists CATEGORIES(CATEGORY_ID int NOT NULL AUTO_INCREMENT, CATEGORY_NAME TEXT, primary key (CATEGORY_ID));
CREATE_RECIPE=create table if not exists RECIPE (DISH_ID int NOT NULL AUTO_INCREMENT, DISH_NAME TEXT, CATEGORY_ID int, USER_ID int, COOKING_TIME TEXT, OTHER TEXT, primary key (DISH_ID), foreign key (CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID) on delete cascade on update cascade, foreign key (USER_ID) references USERS(USER_ID) on delete cascade on update cascade );
CREATE_IMAGE=create table if not exists IMAGE (IMAGE_ID int NOT NULL AUTO_INCREMENT, IMAGE_URI TEXT, DISH_ID int, primary key (IMAGE_ID), foreign key (DISH_ID) REFERENCES RECIPE(DISH_ID) on delete cascade on update cascade);
CREATE_INGREDIENTS=create table if not exists INGREDIENTS (INGRE_ID int NOT NULL AUTO_INCREMENT, INGRE_NAME TEXT, INGRE_QUANTITY TEXT, DISH_ID int, primary key (INGRE_ID), foreign key (DISH_ID) references RECIPE(DISH_ID) on delete cascade on update cascade);
CREATE_DIRECTIONS=create table if not exists DIRECTIONS (DIRECTION_ID int NOT NULL AUTO_INCREMENT, DIRECTION_NAME text, DISH_ID int, primary key (DIRECTION_ID), foreign key (DISH_ID) references RECIPE(DISH_ID) on delete cascade on update cascade);
INSERT_CATEGORY_MAINDISH=insert into CATEGORIES(CATEGORY_NAME) values('Main Dishes');
INSERT_CATEGORY_SALAD=insert into CATEGORIES(CATEGORY_NAME) values('Salad');
INSERT_CATEGORY_DESSERT=insert into CATEGORIES(CATEGORY_NAME) values('Dessert');